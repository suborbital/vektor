// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// MiddlewareTester is an autogenerated mock type for the MiddlewareTester type
type MiddlewareTester struct {
	mock.Mock
}

type MiddlewareTester_Expecter struct {
	mock *mock.Mock
}

func (_m *MiddlewareTester) EXPECT() *MiddlewareTester_Expecter {
	return &MiddlewareTester_Expecter{mock: &_m.Mock}
}

// JobInMiddleware provides a mock function with given fields: _a0
func (_m *MiddlewareTester) JobInMiddleware(_a0 string) string {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MiddlewareTester_JobInMiddleware_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'JobInMiddleware'
type MiddlewareTester_JobInMiddleware_Call struct {
	*mock.Call
}

// JobInMiddleware is a helper method to define mock.On call
//  - _a0 string
func (_e *MiddlewareTester_Expecter) JobInMiddleware(_a0 interface{}) *MiddlewareTester_JobInMiddleware_Call {
	return &MiddlewareTester_JobInMiddleware_Call{Call: _e.mock.On("JobInMiddleware", _a0)}
}

func (_c *MiddlewareTester_JobInMiddleware_Call) Run(run func(_a0 string)) *MiddlewareTester_JobInMiddleware_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MiddlewareTester_JobInMiddleware_Call) Return(_a0 string) *MiddlewareTester_JobInMiddleware_Call {
	_c.Call.Return(_a0)
	return _c
}

// NewMiddlewareTester creates a new instance of MiddlewareTester. It also registers a cleanup function to assert the mocks expectations.
func NewMiddlewareTester(t testing.TB) *MiddlewareTester {
	mock := &MiddlewareTester{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
